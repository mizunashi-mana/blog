Resolved settings for: "./pelicanconf.py"
Settings path: "./ruff.toml"

# General Settings
cache_dir = "./.ruff_cache"
fix = false
fix_only = false
output_format = full
show_fixes = false
unsafe_fixes = hint

# File Resolver Settings
file_resolver.exclude = [
	".venv",
	"node_modules",
	"output",
	"plugins/official",
]
file_resolver.extend_exclude = []
file_resolver.force_exclude = false
file_resolver.include = [
	"*.py",
	"*.pyi",
	"*.ipynb",
	"**/pyproject.toml",
]
file_resolver.extend_include = []
file_resolver.respect_gitignore = true
file_resolver.project_root = "."

# Linter Settings
linter.exclude = []
linter.project_root = "."
linter.rules.enabled = [
	unary-prefix-increment-decrement (B002),
	assignment-to-os-environ (B003),
	unreliable-callable-check (B004),
	strip-with-multi-characters (B005),
	mutable-argument-default (B006),
	unused-loop-control-variable (B007),
	function-call-in-default-argument (B008),
	get-attr-with-constant (B009),
	set-attr-with-constant (B010),
	assert-false (B011),
	jump-statement-in-finally (B012),
	redundant-tuple-in-exception-handler (B013),
	duplicate-handler-exception (B014),
	useless-comparison (B015),
	raise-literal (B016),
	assert-raises-exception (B017),
	useless-expression (B018),
	cached-instance-method (B019),
	loop-variable-overrides-iterator (B020),
	f-string-docstring (B021),
	useless-contextlib-suppress (B022),
	function-uses-loop-variable (B023),
	abstract-base-class-without-abstract-method (B024),
	duplicate-try-block-exception (B025),
	star-arg-unpacking-after-keyword-arg (B026),
	empty-method-without-abstract-decorator (B027),
	no-explicit-stacklevel (B028),
	except-with-empty-tuple (B029),
	except-with-non-exception-classes (B030),
	reuse-of-groupby-generator (B031),
	unintentional-type-annotation (B032),
	duplicate-value (B033),
	re-sub-positional-args (B034),
	static-key-dict-comprehension (B035),
	mutable-contextvar-default (B039),
	raise-without-from-inside-except (B904),
	zip-without-explicit-strict (B905),
	batched-without-explicit-strict (B911),
	unnecessary-generator-list (C400),
	unnecessary-generator-set (C401),
	unnecessary-generator-dict (C402),
	unnecessary-list-comprehension-set (C403),
	unnecessary-list-comprehension-dict (C404),
	unnecessary-literal-set (C405),
	unnecessary-literal-dict (C406),
	unnecessary-collection-call (C408),
	unnecessary-literal-within-tuple-call (C409),
	unnecessary-literal-within-list-call (C410),
	unnecessary-list-call (C411),
	unnecessary-call-around-sorted (C413),
	unnecessary-double-cast-or-process (C414),
	unnecessary-subscript-reversal (C415),
	unnecessary-comprehension (C416),
	unnecessary-map (C417),
	unnecessary-literal-within-dict-call (C418),
	unnecessary-comprehension-in-call (C419),
	unnecessary-dict-comprehension-for-iterable (C420),
	unnecessary-placeholder (PIE790),
	duplicate-class-field-definition (PIE794),
	non-unique-enums (PIE796),
	unnecessary-spread (PIE800),
	unnecessary-dict-kwargs (PIE804),
	reimplemented-container-builtin (PIE807),
	unnecessary-range-start (PIE808),
	multiple-starts-ends-with (PIE810),
	unnecessary-return-none (RET501),
	implicit-return-value (RET502),
	implicit-return (RET503),
	unnecessary-assign (RET504),
	superfluous-else-return (RET505),
	superfluous-else-raise (RET506),
	superfluous-else-continue (RET507),
	superfluous-else-break (RET508),
	duplicate-isinstance-call (SIM101),
	collapsible-if (SIM102),
	needless-bool (SIM103),
	suppressible-exception (SIM105),
	return-in-try-except-finally (SIM107),
	compare-with-tuple (SIM109),
	reimplemented-builtin (SIM110),
	uncapitalized-environment-variables (SIM112),
	enumerate-for-loop (SIM113),
	if-with-same-arms (SIM114),
	open-file-with-context-handler (SIM115),
	if-else-block-instead-of-dict-lookup (SIM116),
	multiple-with-statements (SIM117),
	in-dict-keys (SIM118),
	negate-equal-op (SIM201),
	negate-not-equal-op (SIM202),
	double-negation (SIM208),
	if-expr-with-true-false (SIM210),
	if-expr-with-false-true (SIM211),
	if-expr-with-twisted-arms (SIM212),
	expr-and-not-expr (SIM220),
	expr-or-not-expr (SIM221),
	expr-or-true (SIM222),
	expr-and-false (SIM223),
	yoda-conditions (SIM300),
	if-else-block-instead-of-dict-get (SIM401),
	split-static-string (SIM905),
	dict-get-with-none-default (SIM910),
	zip-dict-keys-and-values (SIM911),
	os-path-abspath (PTH100),
	os-chmod (PTH101),
	os-mkdir (PTH102),
	os-makedirs (PTH103),
	os-rename (PTH104),
	os-replace (PTH105),
	os-rmdir (PTH106),
	os-remove (PTH107),
	os-unlink (PTH108),
	os-getcwd (PTH109),
	os-path-exists (PTH110),
	os-path-expanduser (PTH111),
	os-path-isdir (PTH112),
	os-path-isfile (PTH113),
	os-path-islink (PTH114),
	os-readlink (PTH115),
	os-stat (PTH116),
	os-path-isabs (PTH117),
	os-path-join (PTH118),
	os-path-basename (PTH119),
	os-path-dirname (PTH120),
	os-path-samefile (PTH121),
	os-path-splitext (PTH122),
	builtin-open (PTH123),
	py-path (PTH124),
	path-constructor-current-directory (PTH201),
	os-path-getsize (PTH202),
	os-path-getatime (PTH203),
	os-path-getmtime (PTH204),
	os-path-getctime (PTH205),
	os-sep-split (PTH206),
	glob (PTH207),
	os-listdir (PTH208),
	invalid-pathlib-with-suffix (PTH210),
	unsorted-imports (I001),
	missing-required-import (I002),
	invalid-class-name (N801),
	invalid-function-name (N802),
	invalid-argument-name (N803),
	invalid-first-argument-name-for-class-method (N804),
	invalid-first-argument-name-for-method (N805),
	non-lowercase-variable-in-function (N806),
	dunder-function-name (N807),
	constant-imported-as-non-constant (N811),
	lowercase-imported-as-non-lowercase (N812),
	camelcase-imported-as-lowercase (N813),
	camelcase-imported-as-constant (N814),
	mixed-case-variable-in-class-scope (N815),
	mixed-case-variable-in-global-scope (N816),
	camelcase-imported-as-acronym (N817),
	error-suffix-on-exception-name (N818),
	invalid-module-name (N999),
	mixed-spaces-and-tabs (E101),
	multiple-imports-on-one-line (E401),
	module-import-not-at-top-of-file (E402),
	line-too-long (E501),
	multiple-statements-on-one-line-colon (E701),
	multiple-statements-on-one-line-semicolon (E702),
	useless-semicolon (E703),
	none-comparison (E711),
	true-false-comparison (E712),
	not-in-test (E713),
	not-is-test (E714),
	type-comparison (E721),
	bare-except (E722),
	lambda-assignment (E731),
	ambiguous-variable-name (E741),
	ambiguous-class-name (E742),
	ambiguous-function-name (E743),
	io-error (E902),
	tab-indentation (W191),
	trailing-whitespace (W291),
	missing-newline-at-end-of-file (W292),
	blank-line-with-whitespace (W293),
	doc-line-too-long (W505),
	invalid-escape-sequence (W605),
	unused-import (F401),
	import-shadowed-by-loop-var (F402),
	undefined-local-with-import-star (F403),
	late-future-import (F404),
	undefined-local-with-import-star-usage (F405),
	undefined-local-with-nested-import-star-usage (F406),
	future-feature-not-defined (F407),
	percent-format-invalid-format (F501),
	percent-format-expected-mapping (F502),
	percent-format-expected-sequence (F503),
	percent-format-extra-named-arguments (F504),
	percent-format-missing-argument (F505),
	percent-format-mixed-positional-and-named (F506),
	percent-format-positional-count-mismatch (F507),
	percent-format-star-requires-sequence (F508),
	percent-format-unsupported-format-character (F509),
	string-dot-format-invalid-format (F521),
	string-dot-format-extra-named-arguments (F522),
	string-dot-format-extra-positional-arguments (F523),
	string-dot-format-missing-arguments (F524),
	string-dot-format-mixing-automatic (F525),
	f-string-missing-placeholders (F541),
	multi-value-repeated-key-literal (F601),
	multi-value-repeated-key-variable (F602),
	expressions-in-star-assignment (F621),
	multiple-starred-expressions (F622),
	assert-tuple (F631),
	is-literal (F632),
	invalid-print-syntax (F633),
	if-tuple (F634),
	break-outside-loop (F701),
	continue-outside-loop (F702),
	yield-outside-function (F704),
	return-outside-function (F706),
	default-except-not-last (F707),
	forward-annotation-syntax-error (F722),
	redefined-while-unused (F811),
	undefined-name (F821),
	undefined-export (F822),
	undefined-local (F823),
	unused-variable (F841),
	unused-annotation (F842),
	raise-not-implemented (F901),
	useless-metaclass-type (UP001),
	type-of-primitive (UP003),
	useless-object-inheritance (UP004),
	deprecated-unittest-alias (UP005),
	non-pep585-annotation (UP006),
	non-pep604-annotation-union (UP007),
	super-call-with-parameters (UP008),
	utf8-encoding-declaration (UP009),
	unnecessary-future-import (UP010),
	lru-cache-without-parameters (UP011),
	unnecessary-encode-utf8 (UP012),
	convert-typed-dict-functional-to-class (UP013),
	convert-named-tuple-functional-to-class (UP014),
	redundant-open-modes (UP015),
	datetime-timezone-utc (UP017),
	native-literals (UP018),
	typing-text-str-alias (UP019),
	open-alias (UP020),
	replace-universal-newlines (UP021),
	replace-stdout-stderr (UP022),
	deprecated-c-element-tree (UP023),
	os-error-alias (UP024),
	unicode-kind-prefix (UP025),
	deprecated-mock-import (UP026),
	yield-in-for-loop (UP028),
	unnecessary-builtin-import (UP029),
	format-literals (UP030),
	printf-string-formatting (UP031),
	f-string (UP032),
	lru-cache-with-maxsize-none (UP033),
	extraneous-parentheses (UP034),
	deprecated-import (UP035),
	outdated-version-block (UP036),
	quoted-annotation (UP037),
	non-pep604-isinstance (UP038),
	unnecessary-class-parentheses (UP039),
	non-pep695-type-alias (UP040),
	timeout-error-alias (UP041),
	unnecessary-default-type-args (UP043),
	non-pep646-unpack (UP044),
	non-pep604-annotation-optional (UP045),
	non-pep695-generic-class (UP046),
	non-pep695-generic-function (UP047),
	private-type-parameter (UP049),
	collection-literal-concatenation (RUF005),
	asyncio-dangling-task (RUF006),
	zip-instead-of-pairwise (RUF007),
	mutable-dataclass-default (RUF008),
	function-call-in-dataclass-default-argument (RUF009),
	explicit-f-string-type-conversion (RUF010),
	mutable-class-default (RUF012),
	implicit-optional (RUF013),
	unnecessary-iterable-allocation-for-first-element (RUF015),
	invalid-index-type (RUF016),
	quadratic-list-summation (RUF017),
	assignment-in-assert (RUF018),
	unnecessary-key-check (RUF019),
	never-union (RUF020),
	parenthesize-chained-operators (RUF021),
	unsorted-dunder-all (RUF022),
	unsorted-dunder-slots (RUF023),
	mutable-fromkeys-value (RUF024),
	default-factory-kwarg (RUF026),
	invalid-formatter-suppression-comment (RUF028),
	assert-with-print-message (RUF030),
	decimal-from-float-literal (RUF032),
	post-init-default (RUF033),
	useless-if-else (RUF034),
	invalid-assert-message-literal-argument (RUF040),
	unnecessary-nested-literal (RUF041),
	unnecessary-cast-to-int (RUF046),
	map-int-version-parsing (RUF048),
	dataclass-enum (RUF049),
	if-key-in-dict-del (RUF051),
	class-with-mixed-type-vars (RUF053),
	unnecessary-round (RUF057),
	starmap-zip (RUF058),
	unused-noqa (RUF100),
	redirected-noqa (RUF101),
	invalid-pyproject-toml (RUF200),
]
linter.rules.should_fix = [
	unary-prefix-increment-decrement (B002),
	assignment-to-os-environ (B003),
	unreliable-callable-check (B004),
	strip-with-multi-characters (B005),
	mutable-argument-default (B006),
	unused-loop-control-variable (B007),
	function-call-in-default-argument (B008),
	get-attr-with-constant (B009),
	set-attr-with-constant (B010),
	assert-false (B011),
	jump-statement-in-finally (B012),
	redundant-tuple-in-exception-handler (B013),
	duplicate-handler-exception (B014),
	useless-comparison (B015),
	raise-literal (B016),
	assert-raises-exception (B017),
	useless-expression (B018),
	cached-instance-method (B019),
	loop-variable-overrides-iterator (B020),
	f-string-docstring (B021),
	useless-contextlib-suppress (B022),
	function-uses-loop-variable (B023),
	abstract-base-class-without-abstract-method (B024),
	duplicate-try-block-exception (B025),
	star-arg-unpacking-after-keyword-arg (B026),
	empty-method-without-abstract-decorator (B027),
	no-explicit-stacklevel (B028),
	except-with-empty-tuple (B029),
	except-with-non-exception-classes (B030),
	reuse-of-groupby-generator (B031),
	unintentional-type-annotation (B032),
	duplicate-value (B033),
	re-sub-positional-args (B034),
	static-key-dict-comprehension (B035),
	mutable-contextvar-default (B039),
	raise-without-from-inside-except (B904),
	zip-without-explicit-strict (B905),
	batched-without-explicit-strict (B911),
	unnecessary-generator-list (C400),
	unnecessary-generator-set (C401),
	unnecessary-generator-dict (C402),
	unnecessary-list-comprehension-set (C403),
	unnecessary-list-comprehension-dict (C404),
	unnecessary-literal-set (C405),
	unnecessary-literal-dict (C406),
	unnecessary-collection-call (C408),
	unnecessary-literal-within-tuple-call (C409),
	unnecessary-literal-within-list-call (C410),
	unnecessary-list-call (C411),
	unnecessary-call-around-sorted (C413),
	unnecessary-double-cast-or-process (C414),
	unnecessary-subscript-reversal (C415),
	unnecessary-comprehension (C416),
	unnecessary-map (C417),
	unnecessary-literal-within-dict-call (C418),
	unnecessary-comprehension-in-call (C419),
	unnecessary-dict-comprehension-for-iterable (C420),
	unnecessary-placeholder (PIE790),
	duplicate-class-field-definition (PIE794),
	non-unique-enums (PIE796),
	unnecessary-spread (PIE800),
	unnecessary-dict-kwargs (PIE804),
	reimplemented-container-builtin (PIE807),
	unnecessary-range-start (PIE808),
	multiple-starts-ends-with (PIE810),
	unnecessary-return-none (RET501),
	implicit-return-value (RET502),
	implicit-return (RET503),
	unnecessary-assign (RET504),
	superfluous-else-return (RET505),
	superfluous-else-raise (RET506),
	superfluous-else-continue (RET507),
	superfluous-else-break (RET508),
	duplicate-isinstance-call (SIM101),
	collapsible-if (SIM102),
	needless-bool (SIM103),
	suppressible-exception (SIM105),
	return-in-try-except-finally (SIM107),
	compare-with-tuple (SIM109),
	reimplemented-builtin (SIM110),
	uncapitalized-environment-variables (SIM112),
	enumerate-for-loop (SIM113),
	if-with-same-arms (SIM114),
	open-file-with-context-handler (SIM115),
	if-else-block-instead-of-dict-lookup (SIM116),
	multiple-with-statements (SIM117),
	in-dict-keys (SIM118),
	negate-equal-op (SIM201),
	negate-not-equal-op (SIM202),
	double-negation (SIM208),
	if-expr-with-true-false (SIM210),
	if-expr-with-false-true (SIM211),
	if-expr-with-twisted-arms (SIM212),
	expr-and-not-expr (SIM220),
	expr-or-not-expr (SIM221),
	expr-or-true (SIM222),
	expr-and-false (SIM223),
	yoda-conditions (SIM300),
	if-else-block-instead-of-dict-get (SIM401),
	split-static-string (SIM905),
	dict-get-with-none-default (SIM910),
	zip-dict-keys-and-values (SIM911),
	os-path-abspath (PTH100),
	os-chmod (PTH101),
	os-mkdir (PTH102),
	os-makedirs (PTH103),
	os-rename (PTH104),
	os-replace (PTH105),
	os-rmdir (PTH106),
	os-remove (PTH107),
	os-unlink (PTH108),
	os-getcwd (PTH109),
	os-path-exists (PTH110),
	os-path-expanduser (PTH111),
	os-path-isdir (PTH112),
	os-path-isfile (PTH113),
	os-path-islink (PTH114),
	os-readlink (PTH115),
	os-stat (PTH116),
	os-path-isabs (PTH117),
	os-path-join (PTH118),
	os-path-basename (PTH119),
	os-path-dirname (PTH120),
	os-path-samefile (PTH121),
	os-path-splitext (PTH122),
	builtin-open (PTH123),
	py-path (PTH124),
	path-constructor-current-directory (PTH201),
	os-path-getsize (PTH202),
	os-path-getatime (PTH203),
	os-path-getmtime (PTH204),
	os-path-getctime (PTH205),
	os-sep-split (PTH206),
	glob (PTH207),
	os-listdir (PTH208),
	invalid-pathlib-with-suffix (PTH210),
	unsorted-imports (I001),
	missing-required-import (I002),
	invalid-class-name (N801),
	invalid-function-name (N802),
	invalid-argument-name (N803),
	invalid-first-argument-name-for-class-method (N804),
	invalid-first-argument-name-for-method (N805),
	non-lowercase-variable-in-function (N806),
	dunder-function-name (N807),
	constant-imported-as-non-constant (N811),
	lowercase-imported-as-non-lowercase (N812),
	camelcase-imported-as-lowercase (N813),
	camelcase-imported-as-constant (N814),
	mixed-case-variable-in-class-scope (N815),
	mixed-case-variable-in-global-scope (N816),
	camelcase-imported-as-acronym (N817),
	error-suffix-on-exception-name (N818),
	invalid-module-name (N999),
	mixed-spaces-and-tabs (E101),
	multiple-imports-on-one-line (E401),
	module-import-not-at-top-of-file (E402),
	line-too-long (E501),
	multiple-statements-on-one-line-colon (E701),
	multiple-statements-on-one-line-semicolon (E702),
	useless-semicolon (E703),
	none-comparison (E711),
	true-false-comparison (E712),
	not-in-test (E713),
	not-is-test (E714),
	type-comparison (E721),
	bare-except (E722),
	lambda-assignment (E731),
	ambiguous-variable-name (E741),
	ambiguous-class-name (E742),
	ambiguous-function-name (E743),
	io-error (E902),
	tab-indentation (W191),
	trailing-whitespace (W291),
	missing-newline-at-end-of-file (W292),
	blank-line-with-whitespace (W293),
	doc-line-too-long (W505),
	invalid-escape-sequence (W605),
	unused-import (F401),
	import-shadowed-by-loop-var (F402),
	undefined-local-with-import-star (F403),
	late-future-import (F404),
	undefined-local-with-import-star-usage (F405),
	undefined-local-with-nested-import-star-usage (F406),
	future-feature-not-defined (F407),
	percent-format-invalid-format (F501),
	percent-format-expected-mapping (F502),
	percent-format-expected-sequence (F503),
	percent-format-extra-named-arguments (F504),
	percent-format-missing-argument (F505),
	percent-format-mixed-positional-and-named (F506),
	percent-format-positional-count-mismatch (F507),
	percent-format-star-requires-sequence (F508),
	percent-format-unsupported-format-character (F509),
	string-dot-format-invalid-format (F521),
	string-dot-format-extra-named-arguments (F522),
	string-dot-format-extra-positional-arguments (F523),
	string-dot-format-missing-arguments (F524),
	string-dot-format-mixing-automatic (F525),
	f-string-missing-placeholders (F541),
	multi-value-repeated-key-literal (F601),
	multi-value-repeated-key-variable (F602),
	expressions-in-star-assignment (F621),
	multiple-starred-expressions (F622),
	assert-tuple (F631),
	is-literal (F632),
	invalid-print-syntax (F633),
	if-tuple (F634),
	break-outside-loop (F701),
	continue-outside-loop (F702),
	yield-outside-function (F704),
	return-outside-function (F706),
	default-except-not-last (F707),
	forward-annotation-syntax-error (F722),
	redefined-while-unused (F811),
	undefined-name (F821),
	undefined-export (F822),
	undefined-local (F823),
	unused-variable (F841),
	unused-annotation (F842),
	raise-not-implemented (F901),
	useless-metaclass-type (UP001),
	type-of-primitive (UP003),
	useless-object-inheritance (UP004),
	deprecated-unittest-alias (UP005),
	non-pep585-annotation (UP006),
	non-pep604-annotation-union (UP007),
	super-call-with-parameters (UP008),
	utf8-encoding-declaration (UP009),
	unnecessary-future-import (UP010),
	lru-cache-without-parameters (UP011),
	unnecessary-encode-utf8 (UP012),
	convert-typed-dict-functional-to-class (UP013),
	convert-named-tuple-functional-to-class (UP014),
	redundant-open-modes (UP015),
	datetime-timezone-utc (UP017),
	native-literals (UP018),
	typing-text-str-alias (UP019),
	open-alias (UP020),
	replace-universal-newlines (UP021),
	replace-stdout-stderr (UP022),
	deprecated-c-element-tree (UP023),
	os-error-alias (UP024),
	unicode-kind-prefix (UP025),
	deprecated-mock-import (UP026),
	yield-in-for-loop (UP028),
	unnecessary-builtin-import (UP029),
	format-literals (UP030),
	printf-string-formatting (UP031),
	f-string (UP032),
	lru-cache-with-maxsize-none (UP033),
	extraneous-parentheses (UP034),
	deprecated-import (UP035),
	outdated-version-block (UP036),
	quoted-annotation (UP037),
	non-pep604-isinstance (UP038),
	unnecessary-class-parentheses (UP039),
	non-pep695-type-alias (UP040),
	timeout-error-alias (UP041),
	unnecessary-default-type-args (UP043),
	non-pep646-unpack (UP044),
	non-pep604-annotation-optional (UP045),
	non-pep695-generic-class (UP046),
	non-pep695-generic-function (UP047),
	private-type-parameter (UP049),
	collection-literal-concatenation (RUF005),
	asyncio-dangling-task (RUF006),
	zip-instead-of-pairwise (RUF007),
	mutable-dataclass-default (RUF008),
	function-call-in-dataclass-default-argument (RUF009),
	explicit-f-string-type-conversion (RUF010),
	mutable-class-default (RUF012),
	implicit-optional (RUF013),
	unnecessary-iterable-allocation-for-first-element (RUF015),
	invalid-index-type (RUF016),
	quadratic-list-summation (RUF017),
	assignment-in-assert (RUF018),
	unnecessary-key-check (RUF019),
	never-union (RUF020),
	parenthesize-chained-operators (RUF021),
	unsorted-dunder-all (RUF022),
	unsorted-dunder-slots (RUF023),
	mutable-fromkeys-value (RUF024),
	default-factory-kwarg (RUF026),
	invalid-formatter-suppression-comment (RUF028),
	assert-with-print-message (RUF030),
	decimal-from-float-literal (RUF032),
	post-init-default (RUF033),
	useless-if-else (RUF034),
	invalid-assert-message-literal-argument (RUF040),
	unnecessary-nested-literal (RUF041),
	unnecessary-cast-to-int (RUF046),
	map-int-version-parsing (RUF048),
	dataclass-enum (RUF049),
	if-key-in-dict-del (RUF051),
	class-with-mixed-type-vars (RUF053),
	unnecessary-round (RUF057),
	starmap-zip (RUF058),
	unused-noqa (RUF100),
	redirected-noqa (RUF101),
	invalid-pyproject-toml (RUF200),
]
linter.per_file_ignores = {}
linter.safety_table.forced_safe = []
linter.safety_table.forced_unsafe = []
linter.unresolved_target_version = 3.12
linter.per_file_target_version = {}
linter.preview = disabled
linter.explicit_preview_rules = false
linter.extension = ExtensionMapping({})
linter.allowed_confusables = []
linter.builtins = []
linter.dummy_variable_rgx = ^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$
linter.external = []
linter.ignore_init_module_imports = true
linter.logger_objects = []
linter.namespace_packages = []
linter.src = [
	".",
	"./src",
]
linter.tab_size = 4
linter.line_length = 100
linter.task_tags = [
	TODO,
	FIXME,
	XXX,
]
linter.typing_modules = []
linter.typing_extensions = true

# Linter Plugins
linter.flake8_annotations.mypy_init_return = false
linter.flake8_annotations.suppress_dummy_args = false
linter.flake8_annotations.suppress_none_returning = false
linter.flake8_annotations.allow_star_arg_any = false
linter.flake8_annotations.ignore_fully_untyped = false
linter.flake8_bandit.hardcoded_tmp_directory = [
	/tmp,
	/var/tmp,
	/dev/shm,
]
linter.flake8_bandit.check_typed_exception = false
linter.flake8_bandit.extend_markup_names = []
linter.flake8_bandit.allowed_markup_calls = []
linter.flake8_bugbear.extend_immutable_calls = []
linter.flake8_builtins.allowed_modules = []
linter.flake8_builtins.ignorelist = []
linter.flake8_builtins.strict_checking = false
linter.flake8_comprehensions.allow_dict_calls_with_keyword_arguments = false
linter.flake8_copyright.notice_rgx = (?i)Copyright\s+((?:\(C\)|©)\s+)?\d{4}((-|,\s)\d{4})*
linter.flake8_copyright.author = none
linter.flake8_copyright.min_file_size = 0
linter.flake8_errmsg.max_string_length = 0
linter.flake8_gettext.functions_names = [
	_,
	gettext,
	ngettext,
]
linter.flake8_implicit_str_concat.allow_multiline = true
linter.flake8_import_conventions.aliases = {
	altair = alt,
	holoviews = hv,
	matplotlib = mpl,
	matplotlib.pyplot = plt,
	networkx = nx,
	numpy = np,
	numpy.typing = npt,
	pandas = pd,
	panel = pn,
	plotly.express = px,
	polars = pl,
	pyarrow = pa,
	seaborn = sns,
	tensorflow = tf,
	tkinter = tk,
	xml.etree.ElementTree = ET,
}
linter.flake8_import_conventions.banned_aliases = {}
linter.flake8_import_conventions.banned_from = []
linter.flake8_pytest_style.fixture_parentheses = false
linter.flake8_pytest_style.parametrize_names_type = tuple
linter.flake8_pytest_style.parametrize_values_type = list
linter.flake8_pytest_style.parametrize_values_row_type = tuple
linter.flake8_pytest_style.raises_require_match_for = [
	BaseException,
	Exception,
	ValueError,
	OSError,
	IOError,
	EnvironmentError,
	socket.error,
]
linter.flake8_pytest_style.raises_extend_require_match_for = []
linter.flake8_pytest_style.mark_parentheses = false
linter.flake8_quotes.inline_quotes = double
linter.flake8_quotes.multiline_quotes = double
linter.flake8_quotes.docstring_quotes = double
linter.flake8_quotes.avoid_escape = true
linter.flake8_self.ignore_names = [
	_make,
	_asdict,
	_replace,
	_fields,
	_field_defaults,
	_name_,
	_value_,
]
linter.flake8_tidy_imports.ban_relative_imports = "parents"
linter.flake8_tidy_imports.banned_api = {}
linter.flake8_tidy_imports.banned_module_level_imports = []
linter.flake8_type_checking.strict = false
linter.flake8_type_checking.exempt_modules = [
	typing,
	typing_extensions,
]
linter.flake8_type_checking.runtime_required_base_classes = []
linter.flake8_type_checking.runtime_required_decorators = []
linter.flake8_type_checking.quote_annotations = false
linter.flake8_unused_arguments.ignore_variadic_names = false
linter.isort.required_imports = []
linter.isort.combine_as_imports = false
linter.isort.force_single_line = false
linter.isort.force_sort_within_sections = false
linter.isort.detect_same_package = true
linter.isort.case_sensitive = false
linter.isort.force_wrap_aliases = false
linter.isort.force_to_top = []
linter.isort.known_modules = {}
linter.isort.order_by_type = true
linter.isort.relative_imports_order = furthest_to_closest
linter.isort.single_line_exclusions = []
linter.isort.split_on_trailing_comma = true
linter.isort.classes = []
linter.isort.constants = []
linter.isort.variables = []
linter.isort.no_lines_before = []
linter.isort.lines_after_imports = -1
linter.isort.lines_between_types = 0
linter.isort.forced_separate = []
linter.isort.section_order = [
	known { type = future },
	known { type = standard_library },
	known { type = third_party },
	known { type = first_party },
	known { type = local_folder },
]
linter.isort.default_section = known { type = third_party }
linter.isort.no_sections = false
linter.isort.from_first = false
linter.isort.length_sort = false
linter.isort.length_sort_straight = false
linter.mccabe.max_complexity = 10
linter.pep8_naming.ignore_names = [
	setUp,
	tearDown,
	setUpClass,
	tearDownClass,
	setUpModule,
	tearDownModule,
	asyncSetUp,
	asyncTearDown,
	setUpTestData,
	failureException,
	longMessage,
	maxDiff,
]
linter.pep8_naming.classmethod_decorators = []
linter.pep8_naming.staticmethod_decorators = []
linter.pycodestyle.max_line_length = 100
linter.pycodestyle.max_doc_length = none
linter.pycodestyle.ignore_overlong_task_comments = false
linter.pyflakes.extend_generics = []
linter.pyflakes.allowed_unused_imports = []
linter.pylint.allow_magic_value_types = [
	str,
	bytes,
]
linter.pylint.allow_dunder_method_names = []
linter.pylint.max_args = 5
linter.pylint.max_positional_args = 5
linter.pylint.max_returns = 6
linter.pylint.max_bool_expr = 5
linter.pylint.max_branches = 12
linter.pylint.max_statements = 50
linter.pylint.max_public_methods = 20
linter.pylint.max_locals = 15
linter.pyupgrade.keep_runtime_typing = false
linter.ruff.parenthesize_tuple_in_subscript = false

# Formatter Settings
formatter.exclude = []
formatter.unresolved_target_version = 3.12
formatter.per_file_target_version = {}
formatter.preview = disabled
formatter.line_width = 100
formatter.line_ending = auto
formatter.indent_style = space
formatter.indent_width = 4
formatter.quote_style = single
formatter.magic_trailing_comma = respect
formatter.docstring_code_format = disabled
formatter.docstring_code_line_width = dynamic

# Analyze Settings
analyze.exclude = []
analyze.preview = disabled
analyze.target_version = 3.12
analyze.string_imports = disabled
analyze.extension = ExtensionMapping({})
analyze.include_dependencies = {}
