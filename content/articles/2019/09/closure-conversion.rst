クロージャ変換とラムダリフティング
==================================

:date: 2019-09-01 20:00
:tags: Haskell, コンパイラ, GHC, 最適化
:category: プログラミング言語

ネストした関数定義を平らにする方法として，よく知られているのがクロージャ変換とラムダリフティングだ．それぞれの特徴をよく参照するので良い機会だからまとめておく．あと，ラムダリフティングをクロージャ変換する言語に最適化として組み込むことができることも知られている． GHC は昔からラムダリフティングを最適化としていれる話に消極的だったんだけど，最近解析手法の向上により事情が変わってきて，ラムダリフティングを組み込むようになった．その話も触れとこうかなと．

ネストした関数の平坦下
----------------------

ラムダ計算に ``let`` を追加した以下のプログラムを考える:


